{
  "$schema": "https://ui.shadcn.com/schema/registry.json",
  "name": "kitze-ui",
  "homepage": "https://ui.kitze.io",
  "items": [
    {
      "name": "with-search-bar",
      "type": "registry:component",
      "title": "With Search Bar",
      "description": "A component that provides a searchable interface with animated transitions",
      "dependencies": [
        "framer-motion",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/with-search-bar/WithSearchBar.tsx",
          "type": "registry:component",
          "target": "components/WithSearchBar.tsx"
        }
      ]
    },
    {
      "name": "ui-alert",
      "type": "registry:component",
      "title": "UI Alert",
      "description": "A collection of alert components with confirm and delete variations",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/ui-alert/Alert.tsx",
          "type": "registry:component",
          "target": "components/Alert.tsx"
        },
        {
          "path": "registry/new-york/ui-alert/ConfirmAlert.tsx",
          "type": "registry:component",
          "target": "components/ConfirmAlert.tsx"
        },
        {
          "path": "registry/new-york/ui-alert/ConfirmAlertDelete.tsx",
          "type": "registry:component",
          "target": "components/ConfirmAlertDelete.tsx"
        },
        {
          "path": "registry/new-york/ui-alert/AlertContext.tsx",
          "type": "registry:component",
          "target": "components/AlertContext.tsx"
        }
      ]
    },
    {
      "name": "theme-switch-slider-next-themes",
      "type": "registry:component",
      "title": "Theme Switch Slider with Next-Themes",
      "description": "A theme switcher slider that integrates with the next-themes library for persistent theme management",
      "dependencies": [
        "next-themes"
      ],
      "files": [
        {
          "path": "registry/new-york/theme-switch-slider-next-themes/ThemeSwitchNextThemes.tsx",
          "type": "registry:component",
          "target": "components/ThemeSwitchNextThemes.tsx"
        },
        {
          "path": "registry/hooks/useMounted.ts",
          "type": "registry:hook",
          "target": "hooks/useMounted.ts"
        }
      ]
    },
    {
      "name": "theme-switch-slider",
      "type": "registry:component",
      "title": "Theme Switch Slider",
      "description": "A beautiful animated theme switcher with a sliding control and animated stars",
      "dependencies": [
        "framer-motion",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/theme-switch-slider/ThemeSwitchSlider.tsx",
          "type": "registry:component",
          "target": "components/ThemeSwitchSlider.tsx"
        }
      ]
    },
    {
      "name": "theme-switch-minimal-next-themes",
      "type": "registry:component",
      "title": "Theme Switch Minimal with Next-Themes",
      "description": "A minimal theme switcher that integrates with the next-themes library for persistent theme management",
      "dependencies": [
        "next-themes"
      ],
      "files": [
        {
          "path": "registry/new-york/theme-switch-minimal-next-themes/ThemeSwitchMinimalNextThemes.tsx",
          "type": "registry:component",
          "target": "components/ThemeSwitchMinimalNextThemes.tsx"
        },
        {
          "path": "registry/hooks/useMounted.ts",
          "type": "registry:hook",
          "target": "hooks/useMounted.ts"
        }
      ]
    },
    {
      "name": "theme-switch-minimal",
      "type": "registry:component",
      "title": "Theme Switch Minimal",
      "description": "A minimal theme switch button with smooth icon transitions for light, dark, and system theme modes",
      "dependencies": [
        "framer-motion",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/theme-switch-minimal/ThemeSwitchMinimal.tsx",
          "type": "registry:component",
          "target": "components/ThemeSwitchMinimal.tsx"
        }
      ]
    },
    {
      "name": "suspensed",
      "type": "registry:component",
      "title": "Suspensed",
      "description": "A wrapper component for React Suspense with force option",
      "files": [
        {
          "path": "registry/new-york/suspensed/Suspensed.tsx",
          "type": "registry:component",
          "target": "components/Suspensed.tsx"
        }
      ]
    },
    {
      "name": "simple-tooltip",
      "type": "registry:component",
      "title": "Simple Tooltip",
      "description": "A simplified tooltip component built on top of Radix UI tooltip",
      "dependencies": [
        "@radix-ui/react-tooltip"
      ],
      "files": [
        {
          "path": "registry/new-york/simple-tooltip/SimpleTooltip.tsx",
          "type": "registry:component",
          "target": "components/SimpleTooltip.tsx"
        }
      ]
    },
    {
      "name": "spinner",
      "type": "registry:component",
      "title": "Spinner",
      "description": "A customizable loading spinner component with different variants and sizes",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/spinner/Spinner.tsx",
          "type": "registry:component",
          "target": "components/Spinner.tsx"
        }
      ]
    },
    {
      "name": "tab-panels",
      "type": "registry:component",
      "title": "Tab Panels",
      "description": "A component to display content in tabs using a segmented control.",
      "dependencies": [
        "framer-motion",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/tab-panels/TabPanels.tsx",
          "type": "registry:component",
          "target": "components/TabPanels.tsx"
        }
      ]
    },
    {
      "name": "simple-popover",
      "type": "registry:component",
      "title": "Simple Popover",
      "description": "A simple popover component that displays content when triggered.",
      "files": [
        {
          "path": "registry/new-york/simple-popover/index.tsx",
          "type": "registry:component",
          "target": "components/index.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        }
      ]
    },
    {
      "name": "simple-select",
      "type": "registry:component",
      "title": "Simple Select",
      "description": "A simplified select component that accepts an array of options with value, label, and search functionality",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/simple-select/SimpleSelect.tsx",
          "type": "registry:component",
          "target": "components/SimpleSelect.tsx"
        },
        {
          "path": "registry/new-york/simple-select/SimpleSelectBottomDrawerMenu.tsx",
          "type": "registry:component",
          "target": "components/SimpleSelectBottomDrawerMenu.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        }
      ]
    },
    {
      "name": "simple-dropdown-menu",
      "type": "registry:component",
      "title": "Simple Dropdown Menu",
      "description": "A simplified dropdown menu component with click triggering and common components, including a responsive version for mobile",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/simple-dropdown-menu/SimpleDropdownMenu.tsx",
          "type": "registry:component",
          "target": "components/SimpleDropdownMenu.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/ResponsiveDropdownMenu.tsx",
          "type": "registry:component",
          "target": "components/ResponsiveDropdownMenu.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuItem.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuItem.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuItemEdit.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuItemEdit.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuItemDelete.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuItemDelete.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuLabel.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuLabel.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuSeparator.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuSeparator.tsx"
        },
        {
          "path": "registry/new-york/simple-dropdown-menu/CommonMenuGroup.tsx",
          "type": "registry:component",
          "target": "components/CommonMenuGroup.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        },
        {
          "path": "registry/hooks/useLinkableComponent.ts",
          "type": "registry:hook",
          "target": "hooks/useLinkableComponent.ts"
        }
      ]
    },
    {
      "name": "simple-dialog",
      "type": "registry:component",
      "title": "Simple Dialog",
      "description": "A simple dialog component using Radix UI.",
      "dependencies": [
        "@radix-ui/react-dialog",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/simple-dialog/SimpleDialog.tsx",
          "type": "registry:component",
          "target": "components/SimpleDialog.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        }
      ]
    },
    {
      "name": "simple-context-menu",
      "type": "registry:component",
      "title": "Simple Context Menu",
      "description": "A simple context menu component that wraps content with right-click menu functionality",
      "dependencies": [
        "use-long-press",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/simple-context-menu/SimpleContextMenu.tsx",
          "type": "registry:component",
          "target": "components/SimpleContextMenu.tsx"
        },
        {
          "path": "registry/new-york/simple-context-menu/ResponsiveContextMenu.tsx",
          "type": "registry:component",
          "target": "components/ResponsiveContextMenu.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        },
        {
          "path": "registry/hooks/useLinkableComponent.ts",
          "type": "registry:hook",
          "target": "hooks/useLinkableComponent.ts"
        }
      ]
    },
    {
      "name": "simple-accordion",
      "type": "registry:component",
      "title": "Simple Accordion",
      "description": "A simple accordion component",
      "files": [
        {
          "path": "registry/new-york/simple-accordion/SimpleAccordion.tsx",
          "type": "registry:component",
          "target": "components/SimpleAccordion.tsx"
        }
      ]
    },
    {
      "name": "segmented-control",
      "type": "registry:component",
      "title": "Segmented Control",
      "description": "A simple, accessible segmented control component with size variants",
      "dependencies": [
        "lucide-react",
        "tailwind-variants"
      ],
      "files": [
        {
          "path": "registry/new-york/segmented-control/SegmentedControl.tsx",
          "type": "registry:component",
          "target": "components/SegmentedControl.tsx"
        }
      ]
    },
    {
      "name": "search-bar",
      "type": "registry:component",
      "title": "Search Bar",
      "description": "A reusable search input component with clear functionality",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/search-bar/SearchBar.tsx",
          "type": "registry:component",
          "target": "components/SearchBar.tsx"
        }
      ]
    },
    {
      "name": "page-header",
      "type": "registry:component",
      "title": "Page Header",
      "description": "A responsive page header component with mobile drawer support",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/page-header/PageHeader.tsx",
          "type": "registry:component",
          "target": "components/PageHeader.tsx"
        },
        {
          "path": "registry/hooks/useScrolledPast.ts",
          "type": "registry:hook",
          "target": "hooks/useScrolledPast.ts"
        }
      ]
    },
    {
      "name": "menu-context",
      "type": "registry:component",
      "title": "Menu Context",
      "description": "Context provider to determine the type of menu (dropdown, context, bottom-drawer) and provide a close function.",
      "files": [
        {
          "path": "registry/new-york/menu-context/MenuContext.tsx",
          "type": "registry:component",
          "target": "components/MenuContext.tsx"
        }
      ]
    },
    {
      "name": "kitze-ui-context",
      "type": "registry:component",
      "title": "Kitze UI Context",
      "description": "Provides UI context like mobile detection for Kitze UI components.",
      "files": [
        {
          "path": "registry/new-york/kitze-ui-context/KitzeUIContext.tsx",
          "type": "registry:component",
          "target": "components/KitzeUIContext.tsx"
        }
      ]
    },
    {
      "name": "kbd-shortcuts-list",
      "type": "registry:component",
      "title": "Keyboard Shortcuts List",
      "description": "A component for displaying a list of keyboard shortcuts with labels",
      "dependencies": [],
      "files": [
        {
          "path": "registry/new-york/kbd-shortcuts-list/KbdShortcutsList.tsx",
          "type": "registry:component",
          "target": "components/KbdShortcutsList.tsx"
        }
      ]
    },
    {
      "name": "kbd-shortcuts",
      "type": "registry:component",
      "title": "Keyboard Shortcuts",
      "description": "A component for displaying keyboard shortcuts with customizable separators",
      "dependencies": [],
      "files": [
        {
          "path": "registry/new-york/kbd-shortcuts/KbdShortcuts.tsx",
          "type": "registry:component",
          "target": "components/KbdShortcuts.tsx"
        }
      ]
    },
    {
      "name": "input",
      "type": "registry:component",
      "title": "Input",
      "description": "A customizable input component with support for left/right icons, loading state, and custom styling",
      "files": [
        {
          "path": "registry/new-york/input/Input.tsx",
          "type": "registry:component",
          "target": "components/Input.tsx"
        }
      ]
    },
    {
      "name": "kbd",
      "type": "registry:component",
      "title": "Keyboard Shortcut",
      "description": "A keyboard shortcut display component for showing key combinations",
      "dependencies": [],
      "files": [
        {
          "path": "registry/new-york/kbd/Kbd.tsx",
          "type": "registry:component",
          "target": "components/Kbd.tsx"
        }
      ]
    },
    {
      "name": "hoverable-icon",
      "type": "registry:component",
      "title": "Hoverable Icon",
      "description": "A linkable icon component with tooltip support, hover effects, and color customization",
      "dependencies": [
        "lucide-react",
        "next/link"
      ],
      "files": [
        {
          "path": "registry/new-york/hoverable-icon/HoverableIcon.tsx",
          "type": "registry:component",
          "target": "components/HoverableIcon.tsx"
        },
        {
          "path": "registry/hooks/useLinkableComponent.ts",
          "type": "registry:hook",
          "target": "hooks/useLinkableComponent.ts"
        }
      ]
    },
    {
      "name": "help-info-circle",
      "type": "registry:component",
      "title": "Help Info Circle",
      "description": "A help icon that displays information in a tooltip on desktop and a drawer on mobile",
      "dependencies": [
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/help-info-circle/HelpInfoCircle.tsx",
          "type": "registry:component",
          "target": "components/HelpInfoCircle.tsx"
        }
      ]
    },
    {
      "name": "gradient-text",
      "type": "registry:component",
      "title": "Gradient Text",
      "description": "A text component with animated gradient effects",
      "dependencies": [],
      "files": [
        {
          "path": "registry/new-york/gradient-text/GradientText.tsx",
          "type": "registry:component",
          "target": "components/GradientText.tsx"
        }
      ]
    },
    {
      "name": "form-field-wrapper",
      "type": "registry:component",
      "title": "Form Field Wrapper",
      "description": "A wrapper component for react-hook-form fields providing consistent label, description, and error message handling.",
      "dependencies": [
        "react-hook-form",
        "@hookform/resolvers/zod",
        "zod"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-wrapper/FormFieldWrapper.tsx",
          "type": "registry:component",
          "target": "components/FormFieldWrapper.tsx"
        }
      ]
    },
    {
      "name": "form-field-textarea",
      "type": "registry:component",
      "title": "Form Field Textarea",
      "description": "A textarea component integrated with react-hook-form using FormFieldWrapper.",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-textarea/FormFieldTextarea.tsx",
          "type": "registry:component",
          "target": "components/FormFieldTextarea.tsx"
        }
      ]
    },
    {
      "name": "form-field-select",
      "type": "registry:component",
      "title": "Form Field Select",
      "description": "A form field component that combines FormFieldWrapper with SimpleSelect for easy form integration",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-select/FormFieldSelect.tsx",
          "type": "registry:component",
          "target": "components/FormFieldSelect.tsx"
        }
      ]
    },
    {
      "name": "form-field-input",
      "type": "registry:component",
      "title": "Form Field Input",
      "description": "An input component integrated with react-hook-form using FormFieldWrapper.",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-input/FormFieldInput.tsx",
          "type": "registry:component",
          "target": "components/FormFieldInput.tsx"
        }
      ]
    },
    {
      "name": "form-field-segmented-control",
      "type": "registry:component",
      "title": "Form Field Segmented Control",
      "description": "A form field component that combines FormFieldWrapper with SegmentedControl for easy form integration",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-segmented-control/FormFieldSegmentedControl.tsx",
          "type": "registry:component",
          "target": "components/FormFieldSegmentedControl.tsx"
        }
      ]
    },
    {
      "name": "form-field-checkbox",
      "type": "registry:component",
      "title": "Form Field Checkbox",
      "description": "A checkbox component integrated with react-hook-form using FormFieldWrapper.",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-checkbox/FormFieldCheckbox.tsx",
          "type": "registry:component",
          "target": "components/FormFieldCheckbox.tsx"
        }
      ]
    },
    {
      "name": "form-field-advanced-select",
      "type": "registry:component",
      "title": "Form Field Advanced Select",
      "description": "A form field component that integrates the AdvancedSelect with form handling capabilities",
      "dependencies": [
        "react-hook-form"
      ],
      "files": [
        {
          "path": "registry/new-york/form-field-advanced-select/FormFieldAdvancedSelect.tsx",
          "type": "registry:component",
          "target": "components/FormFieldAdvancedSelect.tsx"
        }
      ]
    },
    {
      "name": "fill-height-spinner",
      "type": "registry:component",
      "title": "Fill Height Spinner",
      "description": "A spinner component that fills and centers in its container height",
      "files": [
        {
          "path": "registry/new-york/fill-height-spinner/FillHeightSpinner.tsx",
          "type": "registry:component",
          "target": "components/FillHeightSpinner.tsx"
        }
      ]
    },
    {
      "name": "dialog-manager",
      "type": "registry:component",
      "title": "Dialog Manager",
      "description": "A context-based dialog management system that allows for opening, closing, and managing multiple dialogs in your React application.",
      "files": [
        {
          "path": "registry/new-york/dialog-manager/DialogManager.tsx",
          "type": "registry:component",
          "target": "components/DialogManager.tsx"
        }
      ]
    },
    {
      "name": "custom-button",
      "type": "registry:component",
      "title": "Custom Button",
      "description": "A customizable button component with various styles, sizes, and features like loading state and icon support",
      "dependencies": [
        "tailwind-variants"
      ],
      "files": [
        {
          "path": "registry/new-york/custom-button/CustomButton.tsx",
          "type": "registry:component",
          "target": "components/CustomButton.tsx"
        },
        {
          "path": "registry/hooks/useLinkableComponent.ts",
          "type": "registry:hook",
          "target": "hooks/useLinkableComponent.ts"
        }
      ]
    },
    {
      "name": "conditional-wrap",
      "type": "registry:component",
      "title": "Conditional Wrap",
      "description": "A utility component that conditionally wraps its children with a wrapper component. Useful for conditional wrappers like tooltips, links, popovers, drag handlers, etc.",
      "files": [
        {
          "path": "registry/new-york/conditional-wrap/ConditionalWrap.tsx",
          "type": "registry:component",
          "target": "components/ConditionalWrap.tsx"
        }
      ]
    },
    {
      "name": "custom-badge",
      "type": "registry:component",
      "title": "Custom Badge",
      "description": "A customizable badge component with color and style options.",
      "dependencies": [
        "tailwind-variants"
      ],
      "files": [
        {
          "path": "registry/new-york/custom-badge/CustomBadge.tsx",
          "type": "registry:component",
          "target": "components/CustomBadge.tsx"
        }
      ]
    },
    {
      "name": "conditional-tooltip",
      "type": "registry:component",
      "title": "Conditional Tooltip",
      "description": "A tooltip component that conditionally renders based on a condition",
      "files": [
        {
          "path": "registry/new-york/conditional-tooltip/ConditionalTooltip.tsx",
          "type": "registry:component",
          "target": "components/ConditionalTooltip.tsx"
        }
      ]
    },
    {
      "name": "bottom-drawer",
      "type": "registry:component",
      "title": "Bottom Drawer",
      "description": "A mobile-friendly bottom drawer component built on top of Vaul, including a menu variant.",
      "dependencies": [
        "vaul",
        "framer-motion",
        "lucide-react"
      ],
      "files": [
        {
          "path": "registry/new-york/bottom-drawer/BottomDrawer.tsx",
          "type": "registry:component",
          "target": "components/BottomDrawer.tsx"
        },
        {
          "path": "registry/new-york/bottom-drawer/BottomDrawerMenu.tsx",
          "type": "registry:component",
          "target": "components/BottomDrawerMenu.tsx"
        },
        {
          "path": "registry/new-york/bottom-drawer/DrawerContext.tsx",
          "type": "registry:component",
          "target": "components/DrawerContext.tsx"
        },
        {
          "path": "registry/new-york/bottom-drawer/BottomDrawerMenuItem.tsx",
          "type": "registry:component",
          "target": "components/BottomDrawerMenuItem.tsx"
        },
        {
          "path": "registry/new-york/bottom-drawer/BottomDrawerMenuComponents.tsx",
          "type": "registry:component",
          "target": "components/BottomDrawerMenuComponents.tsx"
        },
        {
          "path": "registry/hooks/useControlledOpen.ts",
          "type": "registry:hook",
          "target": "hooks/useControlledOpen.ts"
        }
      ]
    },
    {
      "name": "advanced-select",
      "type": "registry:component",
      "title": "Advanced Select",
      "description": "A multi-select component with search capabilities, multiple selection as badges, and animations",
      "dependencies": [
        "lucide-react",
        "framer-motion"
      ],
      "files": [
        {
          "path": "registry/new-york/advanced-select/AdvancedSelect.tsx",
          "type": "registry:component",
          "target": "components/AdvancedSelect.tsx"
        }
      ]
    },
    {
      "name": "full-page-spinner",
      "type": "registry:component",
      "title": "Full Page Spinner",
      "description": "A spinner component that takes full page size and centers itself in the viewport",
      "files": [
        {
          "path": "registry/new-york/full-page-spinner/FullPageSpinner.tsx",
          "type": "registry:component",
          "target": "components/FullPageSpinner.tsx"
        }
      ]
    }
  ]
}