{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "with-search-bar",
  "type": "registry:component",
  "title": "With Search Bar",
  "description": "A component that provides a searchable interface with animated transitions",
  "registryDependencies": [
    "https://ui.kitze.io/r/search-bar.json"
  ],
  "dependencies": [
    "framer-motion",
    "lucide-react"
  ],
  "files": [
    {
      "path": "registry/new-york/with-search-bar/WithSearchBar.tsx",
      "type": "registry:component",
      "content": "import React, { useState, memo, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { SearchBar } from \"@/registry/new-york/search-bar/SearchBar\";\nimport { Search } from \"lucide-react\";\n\ninterface WithSearchProps {\n  children?: React.ReactNode;\n  value: string;\n  onChange: (value: string) => void;\n  placeholder?: string;\n}\n\nexport const WithSearchBar = memo<WithSearchProps>(\n  ({ children, value, onChange, placeholder }) => {\n    const [isSearching, setIsSearching] = useState(false);\n\n    const handleClose = useCallback(() => {\n      if (!value) {\n        setIsSearching(false);\n      }\n    }, [value]);\n\n    const handleForceClose = useCallback(() => {\n      setIsSearching(false);\n    }, []);\n\n    const handleOpenSearch = useCallback(() => {\n      setIsSearching(true);\n    }, []);\n\n    const animationConfig = {\n      transition: { duration: 0.2 },\n    };\n\n    return (\n      <div className=\"relative\">\n        <AnimatePresence mode=\"wait\">\n          {isSearching ? (\n            <motion.div\n              key=\"search\"\n              initial={{ opacity: 0, y: -20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              {...animationConfig}\n              className=\"w-full sm:w-auto\"\n            >\n              <SearchBar\n                value={value}\n                onChange={onChange}\n                placeholder={placeholder}\n                onClose={handleClose}\n                onForceClose={handleForceClose}\n                autoFocus\n              />\n            </motion.div>\n          ) : (\n            <motion.div\n              key=\"content\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: 20 }}\n              {...animationConfig}\n              className=\"flex items-center justify-between w-full\"\n            >\n              {children}\n              <div className=\"flex items-center gap-2\">\n                <button\n                  onClick={handleOpenSearch}\n                  className=\"p-2 text-gray-400 hover:text-gray-600 transition-colors\"\n                  aria-label=\"Search\"\n                >\n                  <Search className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n    );\n  }\n);\n"
    }
  ]
}