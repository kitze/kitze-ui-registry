{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "responsive-tooltip",
  "type": "registry:component",
  "title": "Responsive Tooltip",
  "description": "A tooltip component that adapts to desktop (tooltip) and mobile (bottom drawer) views",
  "registryDependencies": [
    "https://ui.kitze.io/r/simple-tooltip.json",
    "https://ui.kitze.io/r/conditional-wrap.json",
    "https://ui.kitze.io/r/bottom-drawer.json"
  ],
  "files": [
    {
      "path": "registry/new-york/responsive-tooltip/ResponsiveTooltip.tsx",
      "type": "registry:component",
      "content": "import React, { useState } from \"react\";\nimport { SimpleTooltip } from \"@/registry/new-york/simple-tooltip/SimpleTooltip\";\nimport { ConditionalWrap } from \"@/registry/new-york/conditional-wrap/ConditionalWrap\";\nimport { BottomDrawer } from \"@/registry/new-york/bottom-drawer/BottomDrawer\";\nimport { ReactFC } from \"@/lib/utils\";\n\nexport interface ResponsiveTooltipProps {\n  children: React.ReactNode;\n  content: React.ReactNode;\n  className?: string;\n  tooltipClassName?: string;\n  drawerTitle?: string;\n  isMobile?: boolean;\n}\n\nexport const ResponsiveTooltip: ReactFC<ResponsiveTooltipProps> = ({\n  children,\n  content,\n  className,\n  tooltipClassName,\n  drawerTitle = \"Information\",\n  isMobile = false, // Default to desktop view for safety\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  // On desktop: use SimpleTooltip\n  if (!isMobile) {\n    return (\n      <SimpleTooltip\n        content={typeof content === \"string\" ? content : \"\"}\n        className={className}\n        tooltipClassName={tooltipClassName}\n      >\n        {children}\n      </SimpleTooltip>\n    );\n  }\n\n  // On mobile: use ConditionalWrap to handle click and BottomDrawer to show content\n  return (\n    <ConditionalWrap\n      condition={true}\n      wrap={(wrappedChildren) => (\n        <>\n          <div onClick={() => setIsOpen(true)}>{wrappedChildren}</div>\n          <BottomDrawer\n            open={isOpen}\n            onOpenChange={setIsOpen}\n            title={drawerTitle}\n          >\n            <div className=\"p-4\">\n              {typeof content === \"object\" ? content : <p>{content}</p>}\n            </div>\n          </BottomDrawer>\n        </>\n      )}\n    >\n      {children}\n    </ConditionalWrap>\n  );\n};\n"
    }
  ]
}