{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bottom-drawer",
  "type": "registry:component",
  "title": "Bottom Drawer",
  "description": "A mobile-friendly bottom drawer component built on top of Vaul, including a menu variant.",
  "dependencies": ["vaul", "framer-motion"],
  "registryDependencies": [
    "https://ui.kitze.io/r/simple-dropdown-menu.json",
    "https://ui.kitze.io/r/kitze-ui-context.json"
  ],
  "files": [
    {
      "path": "registry/new-york/bottom-drawer/BottomDrawer.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { ReactFC, cn } from \"@/lib/utils\";\nimport { Drawer } from \"vaul\";\nimport { DrawerContext } from \"@/registry/new-york/bottom-drawer/DrawerContext\";\nimport { useControlledOpen } from \"@/registry/hooks/useControlledOpen\";\n\nexport interface BottomDrawerClassNames {\n  overlay?: string;\n  content?: string;\n  handle?: string;\n  title?: string;\n}\n\nexport interface BottomDrawerProps {\n  title?: string;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  trigger?: React.ReactNode;\n  classNames?: BottomDrawerClassNames;\n  renderHeader?:\n    | ((props: {\n        handle: React.ReactNode;\n        close: () => void;\n      }) => React.ReactNode)\n    | null;\n}\n\nexport const BottomDrawer: ReactFC<BottomDrawerProps> = ({\n  children,\n  title,\n  open,\n  onOpenChange,\n  trigger,\n  classNames,\n  renderHeader,\n}) => {\n  const { isOpen, setIsOpen, close } = useControlledOpen({\n    open,\n    onOpenChange,\n  });\n\n  const handle = (\n    <div\n      className={cn(\n        \"mx-auto w-12 h-1.5 flex-shrink-0 rounded-full bg-zinc-300 dark:bg-zinc-700 mb-8\",\n        classNames?.handle\n      )}\n    />\n  );\n\n  const defaultHeader = (\n    <>\n      {handle}\n      {title && (\n        <div\n          className={cn(\n            \"text-lg pl-4 font-semibold mb-4 text-zinc-900 dark:text-white\",\n            classNames?.title\n          )}\n        >\n          {title}\n        </div>\n      )}\n    </>\n  );\n\n  const noHeader = renderHeader === null;\n\n  return (\n    <DrawerContext.Provider value={{ close }}>\n      <Drawer.Root open={isOpen} onOpenChange={setIsOpen}>\n        <AnimatePresence>\n          {isOpen && (\n            <motion.div\n              initial={{ scale: 1 }}\n              animate={{ scale: 0.95 }}\n              exit={{ scale: 1 }}\n              transition={{ duration: 0.3, ease: \"easeInOut\" }}\n              className=\"fixed inset-0 z-30 pointer-events-none\"\n            >\n              <div className=\"w-full h-full origin-top\">\n                <div className=\"h-full overflow-hidden\">\n                  <div className=\"opacity-0\">{trigger}</div>\n                </div>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        <Drawer.Trigger asChild>{trigger}</Drawer.Trigger>\n\n        <Drawer.Portal>\n          <Drawer.Overlay\n            className={cn(\n              \"fixed inset-0 bg-black/40 backdrop-blur-md dark:bg-black/60 z-[9999]\",\n              classNames?.overlay\n            )}\n          />\n          <Drawer.Content\n            className={cn(\n              \"bg-white dark:bg-zinc-900 w-[95%] flex flex-col rounded-t-[10px] fixed bottom-0 left-0 right-0 z-[9999] mx-auto\",\n              \"dark:border-t dark:border-zinc-800\",\n              \"max-w-[500px]\",\n              classNames?.content,\n              {\n                \"py-6\": !noHeader,\n              }\n            )}\n          >\n            <div className=\"p-2 bg-white dark:bg-zinc-900 rounded-t-[10px] flex-1 overflow-y-auto\">\n              {noHeader\n                ? null\n                : renderHeader\n                ? renderHeader({ handle, close })\n                : defaultHeader}\n              {children}\n            </div>\n          </Drawer.Content>\n        </Drawer.Portal>\n      </Drawer.Root>\n    </DrawerContext.Provider>\n  );\n};\n"
    },
    {
      "path": "registry/new-york/bottom-drawer/BottomDrawerMenu.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { ReactFC } from \"@/lib/utils\";\nimport { BottomDrawer } from \"./BottomDrawer\";\nimport { MenuProvider } from \"@/registry/new-york/KitzeUIContext/MenuContext\";\n\nexport interface BottomDrawerMenuProps {\n  children: React.ReactNode;\n  content: React.ReactNode;\n  title?: string;\n}\n\nexport const BottomDrawerMenu: ReactFC<BottomDrawerMenuProps> = ({\n  children,\n  content,\n  title,\n}) => {\n  return (\n    <BottomDrawer title={title} trigger={children}>\n      <MenuProvider menuType=\"bottom-drawer\">\n        <div className=\"flex flex-col\">{content}</div>\n      </MenuProvider>\n    </BottomDrawer>\n  );\n};\n"
    },
    {
      "path": "registry/new-york/bottom-drawer/DrawerContext.tsx",
      "type": "registry:component",
      "content": "import { createContext, useContext } from \"react\";\n\ninterface DrawerContextType {\n  close: () => void;\n}\n\nexport const DrawerContext = createContext<DrawerContextType | null>(null);\n\nexport const useDrawer = () => {\n  const context = useContext(DrawerContext);\n  if (!context) {\n    throw new Error(\"useDrawer must be used within a DrawerProvider\");\n  }\n  return context;\n};\n"
    },
    {
      "path": "registry/new-york/bottom-drawer/BottomDrawerMenuItem.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { ReactFC, cn } from \"@/lib/utils\";\nimport { LucideIcon } from \"lucide-react\";\nimport { HelpInfoCircle } from \"@/registry/new-york/KitzeUIContext/HelpInfoCircle\";\n\nexport interface BottomDrawerMenuItemProps {\n  children: React.ReactNode;\n  leftIcon?: LucideIcon;\n  rightIcon?: LucideIcon;\n  className?: string;\n  disabled?: boolean;\n  destructive?: boolean;\n  onClick?: () => void;\n  href?: string;\n  external?: boolean;\n  isLast?: boolean;\n  shortcut?: string;\n  hint?: string;\n}\n\nexport const BottomDrawerMenuItem: ReactFC<BottomDrawerMenuItemProps> = ({\n  children,\n  leftIcon: LeftIcon,\n  rightIcon: RightIcon,\n  className,\n  disabled,\n  destructive,\n  onClick,\n  href,\n  external,\n  isLast,\n  shortcut,\n  hint,\n}) => {\n  const Component = href ? (external ? \"a\" : \"a\") : \"button\";\n  const linkProps = href\n    ? {\n        href,\n        ...(external && {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n        }),\n      }\n    : {};\n\n  const iconClasses = cn(\n    \"h-5 w-5\",\n    \"text-muted-foreground\",\n    destructive && \"text-destructive\"\n  );\n\n  const itemClasses = cn(\n    \"flex items-center w-full px-4 py-3 text-base\",\n    !isLast && \"border-b border-zinc-100 dark:border-zinc-800\",\n    \"transition-colors active:bg-zinc-50 dark:active:bg-zinc-800/50\",\n    \"text-left justify-start\",\n    disabled && \"opacity-50 pointer-events-none\",\n    destructive && \"text-destructive\",\n    className\n  );\n\n  return (\n    <Component\n      className={itemClasses}\n      onClick={onClick}\n      disabled={disabled && Component === \"button\"}\n      {...linkProps}\n    >\n      {LeftIcon && (\n        <LeftIcon className={cn(\"mr-3 flex-shrink-0\", iconClasses)} />\n      )}\n      <span className=\"flex-1\">{children}</span>\n      {hint && (\n        <div className=\"ml-2 flex-shrink-0\">\n          <HelpInfoCircle\n            content={hint}\n            drawerTitle=\"Help\"\n            iconClassName={destructive ? \"text-destructive\" : \"\"}\n            isMobile={true}\n          />\n        </div>\n      )}\n      {RightIcon && (\n        <RightIcon className={cn(\"ml-auto flex-shrink-0\", iconClasses)} />\n      )}\n    </Component>\n  );\n};\n"
    },
    {
      "path": "registry/new-york/bottom-drawer/BottomDrawerMenuComponents.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { ReactFC, cn } from \"@/lib/utils\";\n\n// Label\nexport interface BottomDrawerMenuLabelProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const BottomDrawerMenuLabel: ReactFC<BottomDrawerMenuLabelProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div\n      className={cn(\n        \"px-4 py-2 text-sm font-medium text-zinc-500 dark:text-zinc-400 text-left\",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\n// Separator\nexport interface BottomDrawerMenuSeparatorProps {\n  className?: string;\n}\n\nexport const BottomDrawerMenuSeparator: ReactFC<\n  BottomDrawerMenuSeparatorProps\n> = ({ className }) => {\n  return (\n    <div\n      className={cn(\n        \"h-[1px] my-1 bg-zinc-100 dark:bg-zinc-800 w-full\",\n        className\n      )}\n    />\n  );\n};\n\n// Group\nexport interface BottomDrawerMenuGroupProps {\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport const BottomDrawerMenuGroup: ReactFC<BottomDrawerMenuGroupProps> = ({\n  children,\n  className,\n}) => {\n  return (\n    <div className={cn(\"flex flex-col w-full\", className)}>{children}</div>\n  );\n};\n"
    }
  ]
}
