{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "form-field-checkbox",
  "type": "registry:component",
  "title": "Form Field Checkbox",
  "description": "A checkbox component integrated with react-hook-form using FormFieldWrapper.",
  "registryDependencies": [
    "checkbox",
    "https://ui.kitze.io/r/form-field-wrapper.json"
  ],
  "dependencies": [
    "react-hook-form"
  ],
  "files": [
    {
      "path": "registry/new-york/form-field-checkbox/FormFieldCheckbox.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  FormFieldWrapper,\n  FormFieldWrapperProps,\n} from \"@/registry/new-york/form-field-wrapper/FormFieldWrapper\";\nimport { FieldValues, FieldPath } from \"react-hook-form\";\nimport { Label } from \"@/components/ui/label\";\nimport { cn } from \"@/lib/utils\";\n\nexport interface FormFieldCheckboxProps<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> extends Omit<\n    FormFieldWrapperProps<TFieldValues, TName>,\n    \"children\" | \"label\"\n  > {\n  label: React.ReactNode;\n  checkboxClassName?: string;\n}\n\nexport function FormFieldCheckbox<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  label,\n  checkboxClassName,\n  ...wrapperProps\n}: FormFieldCheckboxProps<TFieldValues, TName>) {\n  return (\n    <FormFieldWrapper<TFieldValues, TName> {...wrapperProps} label={undefined}>\n      {(field) => (\n        <div className=\"flex items-center space-x-2\">\n          <Checkbox\n            id={field.name}\n            checked={field.value}\n            onCheckedChange={field.onChange}\n            onBlur={field.onBlur}\n            name={field.name}\n            ref={field.ref}\n            required={wrapperProps.required}\n            aria-describedby={\n              wrapperProps.description ? `${field.name}-description` : undefined\n            }\n            className={cn(checkboxClassName)}\n          />\n          <Label\n            htmlFor={field.name}\n            className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n          >\n            {label}\n            {wrapperProps.required && (\n              <span className=\"text-destructive ml-1\">*</span>\n            )}\n          </Label>\n        </div>\n      )}\n    </FormFieldWrapper>\n  );\n}\n"
    },
    {
      "path": "registry/new-york/form-field-checkbox/preview.tsx",
      "type": "registry:component",
      "content": "import React from \"react\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { FormFieldCheckbox } from \"./FormFieldCheckbox\";\nimport { Button } from \"@/components/ui/button\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\n\nconst schema = z.object({\n  subscribe: z.boolean().refine((val) => val === true, {\n    message: \"You must subscribe!\",\n  }),\n});\n\ntype Schema = z.infer<typeof schema>;\n\nexport default function FormFieldCheckboxPreview() {\n  const form = useForm<Schema>({\n    resolver: zodResolver(schema),\n    defaultValues: { subscribe: false },\n  });\n\n  return (\n    <FormProvider {...form}>\n      <form\n        onSubmit={form.handleSubmit((data) => console.log(data))}\n        className=\"space-y-4\"\n      >\n        <FormFieldCheckbox\n          name=\"subscribe\"\n          label=\"Subscribe to newsletter\"\n          description=\"Receive updates directly in your inbox.\"\n          required\n        />\n        <Button type=\"submit\">Submit</Button>\n      </form>\n    </FormProvider>\n  );\n}\n"
    }
  ]
}